title:O que eu preciso para embarcar nessa
text: Um editor de texto e um compilador Haskell. Provavelmente você já tem um editor de texto favorito instalado, então não perca tempo com isso. Neste tutorial iremos usar o GHC, o compilador Haskell mais usado. O melhor modo de iniciar na linguagem é baixando o <a href="http://hackage.haskell.org/platform/">Haskell Platform</a>, que é algo como o Haskell com esteróides.

GHC pode pegar um script Haskell (que normalmente tem uma extensão .hs) e compilá-lo, mas ainda existe um modo interativo que permite que você interativamente interaja com os scripts. Interativamente. Você pode chamar funções de scripts carregados que os resultados serão exibidos imediatamente. Para o seu aprendizado é muito mais fácil e rápido que compilar toda vez que fizer uma alteração e enfim executar o programa a partir do prompt. O modo interativo é chamado digitando <span class="fixed"> ghci </ span> no seu prompt. Se você definir algumas funções em um arquivo chamado, digamos, [code] myfunctions.hs [/ code], você poderá carregar essas funções digitando [code]: l myfunctions [/ code] para então poder brincar com elas, desde que [code] myfunctions.hs [/ code] esteja na mesma pasta na qual o [code] ghci [/ code] foi invocado. Se você mudar o script .hs, basta executar [code]: l myfunctions [/ code] novamente ou fazer [code] : r [/ code], que é o equivalente a recarregar o script atual. O processo comum para mim quando estou brincando é definir algumas funções em um arquivo .hs, carregá-lo e modificá-lo sem pudor. Ao ser preciso, carrego um outro arquivo .hs novamente e assim por diante. Isto é também o que estaremos fazendo aqui.
