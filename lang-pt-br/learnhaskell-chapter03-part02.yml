title: Tipo variável

text: Qual você acha que é o tipo da função [code] head [/code]? Já que [code] head [/code] recebe uma lista e retorna o seu último elemento, qual deve ser o seu tipo? Vamos descobrir!


Hmmm! O que é esse [code] a [/code]? É o tipo? Lembre-se que já vimos que o tipo é escrito com a primeira letra maiúscula, então não pode ser exatamente o tipo. E é exatamente essa diferença que nos diz ser um <em>tipo variável</em>. Isso significa que o [code] a [/code] Pode ser qualquer tipo. Isso é algo como os genéricos de outras linguagens, mas em Haskell é muito mais poderoso porque nos permite facilmente escrever funções mais genéricas caso o processamento seja o mesmo para diferentes tipos. Funções que possuem tipos variáveis são denominadas <em>funções polimórficas</em>. A declaração de tipo em [code] head [/code] diz que recebe uma lista de elementos de qualquer tipo e retorna um elemento dela.


Embora tipos variáveis possam ter nomes maiores de um caracter, geralmente damos a, b, c, d...

Lembra-se do [code] fst [/code]? Retorna o primeiro componente de um par. Vamos examinar o seu tipo.

Vimos que [code] fst [/code] recebe uma tupla que contém dois tipos e retorna o do primeiro elemento. É por isso que podemos usar [code] fst [/code] em pares que contenham quaisquer tipos. Note ainda que mesmo [code] a [/code] e [code] b [/code] sendo de diferentes tipos variáveis, não necessariamente são de tipos diferentes. Só diz que o tipo do primeiro componente (da tupla) deve ser do mesmo que o do retorno.
