title: Aplicação de Função com $

text: Beleza, agora vamos dar uma olhada na função [code]$[/code], também chamada de <i>aplicação de função</i>. Antes de qualquer coisa, vamos ver como isto é definido:

Que negócio é esse? Qual a utilidade desse operador? Ele nada mais é do que uma aplicação de função! Bem, quase foi agora, mas não muito! Enquanto uma aplicação de função normal (que coloca um espaço entre duas coisa) tem realmente uma alta precedência, a função code]$[/code] tem baixa precedência. Aplicar função com um espaço associa à esquerda (ou seja, [code]f a b c[/code] é o mesmo que [code]((f a) b) c)[/code])), aplicar função com [code]$[/code] associa à direita.

Isto tudo é muito bacana, mas como isso irá me ajudar? Na maioria dos casos, esta é uma função conveniente, ou seja, nós não precisamos escrever muitos parênteses. Considere a expressão [code]sum (map sqrt [1..130])[/code]. Como [code]$[/code] tem baixa precedência nós podemos reescrever esta expressão como [code]sum $ map sqrt [1..130][/code], salvando nós mesmo de preciosas teclas não digitadas! Quando um [code]$[/code] é encontrado, a expressão a sua direita é aplicada como um parâmetro da função a sua esquerda. Como seria [code]sqrt 3 + 4 + 9[/code]? Isto soma juntos 9, 4 e a raiz quadrada de 3. Se quisermos a raiz quadrada de <i>3 + 4 + 9</i>, temos que escrever [code]sqrt (3 + 4 + 9)[/code] ou se usarmos [code]$[/code] podemos escrever como [code]sqrt $ 3 + 4 + 9[/code] porque [code]$[/code] tem a menor precedência sobre qualquer operador. Este é o porque que você deve imaginar um [code]$[/code] como sendo uma espécie do equivalente a escrever um parênteses para abrir e outro para fechar na direita da sua expressão.

E como seria [code]sum (filter (&gt; 10) (map (*2) [2..10]))[/code]? Bem, como [code]$[/code]  associa à direita, [code]f (g (z x))[/code] é igual a [code]f $ g $ z x[/code].  E então nós pode reescrever [code]sum (filter (&gt; 10) (map (*2) [2..10]))[/code] como [code]sum $ filter (&gt; 10) $ map (*2) [2..10][/code]

Mas além de nos livrar de parênteses, [code]$[/code] significa que a aplicação de função pode ser tratada como apenas outra função. Dessa forma, nós podemos, por exemplo, mapear a aplicação de função em uma lista de funções.